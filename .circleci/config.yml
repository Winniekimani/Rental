version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: weneey/rental-with-mysql
    docker:
      - image: cimg/openjdk:11.0.22-node


jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      # - run:
      #     name: Install requirements
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install --upgrade pip
      #       pip install -r requirements.txt
      #       python3 manage.py makemigrations
      #       python3 manage.py migrate
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived Docker
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
            
  deploy-playbook:
    docker:
      - image: python:3.8
    steps:
      - checkout
      - add_ssh_keys:
            fingerprints:
              - "SHA256:f72445227e5e5a4d832f8e6e02e7ebf67f6e7d97a47ad0c8b43ae59b20f3da97"

      - run:
            name: Install Ansible
            command: pip install ansible
      - run:
          name: Run Ansible playbook
          command: |
            ansible-playbook -i hosts playbook.yml    

workflows:
  version: 2
  build-main:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: main

      - deploy-playbook:
          requires:
            - publish-latest
          filters:
            branches:
              only: main
  build-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
